Linux administration
================================================================
User administration

1.To add a new user account, you can run either of the following two commands as root.

# adduser [new_account]
# useradd [new_account]


   * His/her home directory is created (/home/username by default).
   * Hidden files
	.bash_logout
	.bash_profile
	.bashrc

2. Edit user information after adding

#usermod [option] [username]
 
usermod --expirydate 2017-01-30 <user-name> #Account will expire on 2017-01-30.

usermod --append --groups root,users user-name # Adding user to group root and users.

groups user-name # Displaying the groups an user is a member of

usermod --lock user-name #Disabling account by locking password

usermod --unlock user-name #Enabling user-account



3. Delete user

deluser --remove-home user-name  #User user and his home directory.

 --remove-home             remove the users home directory and mail spool
 --remove-all-files        remove all files owned by user


4. Creating a new group for read and write access to files that need to be accessed by several users.

groupadd <groupname> # Add a new group
chown :<groupname> common.txt # Change the group owner of common.txt to <groupname>
usermod -aG <groupname> user1 # Add user1 to <groupname>
usermod -aG <groupname> user2 # Add user2 to <groupname>
usermod -aG <groupname> user3 # Add user3 to <groupname>

Delete group

groupdel <groupname> #Delete group

Delete from group
     sudo groups <user-name> #Group Listing of user-name
     sudo id -nG <user-name> #ID of groups
	  Output:<user-group1> <user-group2> <user-group3>

     sudo usermod -G <user-group1>,<user-group-3> <user-name> #Now user remove from user-group2


5 Advance File/Directory attribute

When the “sticky bit” is set on files, Linux just ignores it, whereas for directories it has the effect of preventing users from deleting or even renaming the files it contains unless the user owns the directory, the file, or is root.

chmod o+t [directory]
chmod 1555 [directory]


There are other attributes that enable further limits on the operations that are allowed on files. For example, prevent the file from being renamed, moved, deleted, or even modified. 

chattr +i file1 # file1 become immutable.
chattr +a file2 # enter append-only mode (can only be open in append mode for writing).




---------------------------------------------------------------------------------------------------------------------------
Manage Process

1. pgrep -u <user-name> #Find all running process of user-account.

2. ps -f --pid $(pgrep -u <user-name>) #Full detail of each-individual running process.

3.  killall -9 -u <user-name> #Kill all running process of particular user.

4. 


